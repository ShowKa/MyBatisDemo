buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'org.springframework', name: 'spring-aop', version: '4.3.9.RELEASE'
	runtime('com.h2database:h2')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	
	// lombok
	compile 'org.projectlombok:lombok:1.16.8'

	// commons
	compile 'org.apache.commons:commons-csv:1.2'
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.apache.commons:commons-io:1.3.2'
	compile 'org.apache.commons:commons-collections4:4.1'

	// freemarker
	testCompile group: 'org.freemarker', name: 'freemarker', version: '2.3.23'

	// test
	testCompile group: 'org.jmockit', name: 'jmockit', version: '1.27'	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.ninja-squad:DbSetup:2.0.0')
	testCompile group: 'org.dbunit', name: 'dbunit', version: '2.4.3'
	
}

//For Eclipse IDE only
eclipse {

  classpath {
  	file {

  	  beforeMerged { classpath ->
  	    classpath.entries.removeAll { it.path == 'src/generator/java' }
  	    classpath.entries.removeAll { it.path == 'src/generator/resources' }
  	  }

  	  whenMerged { classpath ->
  	    def genSrc = new org.gradle.plugins.ide.eclipse.model.SourceFolder('src/generator/java', null)
  	    def genResources = new org.gradle.plugins.ide.eclipse.model.SourceFolder('src/generator/resources', null)
  	    classpath.entries.add(genSrc)
  	    classpath.entries.add(genResources)
  	  }

  	}
  }
}
